tosca_definitions_version: tosca_simple_yaml_1_3

node_types:

  sodalite.nodes.hpc.wm.torque: 
    description: >
      torque wm, here we can define properties/attributes applicable for Torque Workload Manager (WM)
    derived_from: tosca.nodes.Compute
    attributes:
      username:
        type: string
      ssh-key:
        type: string
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [sodalite.nodes.hpc.job.torque]

  sodalite.nodes.hpc.job.torque: 
    description: >
      torque job type, here we can define properties/attributes applicable for torque WM, 
      e.g. execution environment, etc.
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - host:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Compute
          relationship: sodalite.relationships.jobHostedOn
    properties:
      name:
        type: string
        description: Name of the job
        required: true
      script_template:
        type: string
        description: >
          Job script template with j2 extension, 
          such that Ansible can process it with the template module
        required: true
      workspace:
        type: string
        description: Location of the sources and the job script
        default: ~/
      email:
        type: string
        description: >
          Job status will be notified to this email
      nb_nodes:
        type: integer
        description: >
          Number of requested nodes
        default: 1
      ppn:
        type: integer
        description: >
          Number of processes per node
        default: 1
      gpus:
        type: integer
        description: >
          Number of requested GPUs
        default: 0
      walltime:
        type: string
        description: >
          Expected time of execution
          FORMAT: HH:MM:SS
        required: true
      monitor_period:
        type: integer
        default: 10
      monitor_retries_headroom:
        type: integer
        default: 2
    attributes:
      job_id:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              # Conditionals or default values will help to get rid of properties that are not used in playbooks
              job_name: { default: { get_property: [SELF, name] } }
              job_script_template: { default: { get_property: [SELF, script_template] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
              job_email: { default: { get_property: [SELF, email] } }
              job_nb_nodes: { default: { get_property: [SELF, nb_nodes] } }
              job_ppn: { default: { get_property: [SELF, ppn] } }
              job_gpus: { default: { get_property: [SELF, gpus] } }
              job_walltime: { default: { get_property: [SELF, walltime] } }
            implementation: playbooks/torque-job/create.yml
          configure:
            inputs:
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
            implementation: playbooks/torque-job/configure.yml
          start:
            inputs:
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              job_name: { default: { get_property: [SELF, name] } }
              job_workspace: { default: { get_property: [SELF, workspace] } }
              job_walltime: { default: { get_property: [SELF, walltime] } }
              job_monitor_period: { default: { get_property: [SELF, monitor_period] } }
              job_monitor_retries_headroom: { default: { get_property: [SELF, monitor_retries_headroom] } }
            implementation: playbooks/torque-job/start.yml

relationship_types:

  sodalite.relationships.jobHostedOn: # currently does nothing
    derived_from: tosca.relationships.HostedOn
    interfaces:
      Configure:
        operations:
          add_source:
            inputs:
              # attribute "public_address" is internal to get a host, but we need to fetch it in playbooks
              wm_public_address: { default: { get_attribute: [SELF, host, public_address] } }
              wm_username: { default: { get_attribute: [SELF, host, username] } }
              wm_keypath: { default: { get_attribute: [SELF, host, ssh-key] } }
              # Conditionals or default values will help to get rid of properties that are not used in playbooks
              job_name: { default: { get_property: [SELF, name] } }
            implementation:
              primary: playbooks/torque-job/dummy-relation-interface.yml