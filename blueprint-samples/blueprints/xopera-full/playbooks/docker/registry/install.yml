---
- hosts: all
  become_user: root
  become: yes
  vars:
    pip_install_packages:
      - name: docker
      - name: cryptography

  tasks:
    - name: Create certs and storage folders
      block:
        - file:
            path: "/home/{{ host_name }}/drive"
            state: directory
        - file:
            path: "/home/{{ host_name }}/certs"
            state: directory

    - name: Copy root CA files
      block:
        - copy:
            src: /home/xopera/certs/ca.crt
            dest: "/home/{{ host_name }}/certs/ca.crt"
        - copy:
            src: /home/xopera/certs/ca.key
            dest: "/home/{{ host_name }}/certs/ca.key"

    - name: Install root CA
      block:
        - command: "cp /home/{{ host_name }}/certs/ca.crt /etc/pki/ca-trust/source/anchors/ca.crt"
        - command: update-ca-trust

    - name: Generate certificates and clean up
      block:
        - openssl_privatekey:
            path: "/home/{{ host_name }}/certs/image.docker.local.key"
            size: 4096
        - openssl_csr:
            path: "/home/{{ host_name }}/certs/image.docker.local.csr"
            privatekey_path: "/home/{{ host_name }}/certs/image.docker.local.key"
            country_name: SI
            organization_name: XLAB
            email_address: dragan.radolovic@xlab.si
            common_name: "image.docker.local"
            subject_alt_name: "IP:{{ public_ipv4_address }}"
        - openssl_certificate:
            path: "/home/{{ host_name }}/certs/image.docker.local.crt"
            csr_path: "/home/{{ host_name }}/certs/image.docker.local.csr"
            ownca_path: "/home/{{ host_name }}/certs/ca.crt"
            ownca_privatekey_path: "/home/{{ host_name }}/certs/ca.key"
            provider: ownca
        - file:
            state: absent
            path: "/home/{{ host_name }}/certs/image.docker.local.csr"

    - name: Install certificates for communication with the registry
      block:
        - file:
            path: "/etc/docker/certs.d/{{ public_ipv4_address }}"
            state: directory
        - command: "cp /home/{{ host_name }}/certs/ca.crt /etc/docker/certs.d/{{ public_ipv4_address }}"
        - command: "cp /home/{{ host_name }}/certs/image.docker.local.key /etc/docker/certs.d/{{ public_ipv4_address }}"
        - command: "cp /home/{{ host_name }}/certs/image.docker.local.crt /etc/docker/certs.d/{{ public_ipv4_address }}/image.docker.local.cert"

    - name: Set up the image
      docker_container:
        name: "{{ host_name }}"
        restart_policy: always
        image: "{{ image }}"
        ports:
          - "{{ expose_port }}:{{ expose_port }}"
        exposed_ports:
          - "{{ expose_port }}"
        ca_cert: "/home/{{ host_name }}/certs/ca.crt"
        client_cert: "/home/{{ host_name }}/certs/image.docker.local.crt"
        client_key: "/home/{{ host_name }}/certs/image.docker.local.key"
        etc_hosts:
          image.docker.local: 127.0.0.1
        volumes:
          - "/home/{{ host_name }}/drive:/var/lib/{{ host_name }}"
          - "/home/{{ host_name }}/certs:/home/{{ host_name }}/certs"
        env:
          REGISTRY_HTTP_ADDR: "0.0.0.0:{{ expose_port }}"
          REGISTRY_HTTP_TLS_CLIENTCAS: "[/home/{{ host_name }}/certs/ca.crt]"
          REGISTRY_HTTP_TLS_CERTIFICATE: "/home/{{ host_name }}/certs/image.docker.local.crt"
          REGISTRY_HTTP_TLS_KEY: "/home/{{ host_name }}/certs/image.docker.local.key"

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.pip
    - geerlingguy.docker
